setwd("C:/Users/gnorman.STATEOFFORMS/OneDrive - State of Forms/Coursera/DataScienceSpecialization/Exploratory-Data-Analysis")
if (!file.exists("WeekOne/data")) {
dir.create("WeekOne/data")
}
pollution <- read.csv("./data/avgpm25.csv", colClasses = c("numeric","character","factor","numeric","numeric"))
if (!file.exists("./data")) {
dir.create("./data")
}
pollution <- read.csv("./data/avgpm25.csv", colClasses = c("numeric","character","factor","numeric","numeric"))
setwd("C:/Users/gnorman.STATEOFFORMS/OneDrive - State of Forms/Coursera/DataScienceSpecialization/Exploratory-Data-Analysis/WeekOne")
if (!file.exists("./data")) {
dir.create("./data")
}
pollution <- read.csv("./data/avgpm25.csv", colClasses = c("numeric","character","factor","numeric","numeric"))
## Exploratory Graphs (part2)
# two dimensions
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
with(pollution, plot(latitude, pm25, col = region))
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
with(subset(pollution, region == "east"), plot(latitude, pm25, main = "East"))
# Exploratory Graphs (part2)
## two dimensions
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
# Plotting Systems in R--there are three
## 1. the base plotting system--generate a plot and annotate separate process. once a change has
##    been make it can't be changed back.
## 2.
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
xyplot(Life.Exp~Income | region, data=state, layout=c(4,1)) # lattice plot
library(lattice)
xyplot(Life.Exp~Income | region, data=state, layout=c(4,1)) # lattice plot
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp~Income | region, data=state, layout=c(4,1)) # lattice plot
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
# Base Plotting System(part 1)
## Some parameters that are shared among base plotting functions: pch, lty, lwd, col, xlab, ylab Global graphics parameter: las, bg, mar, oma, mfrow, mfcol
## some Important base graphics parameters
par("lty")
par("col")
par("pch")
par("bg")
par("mar")
par("mfrow")
## base plotting functions
## plot, lines, points, text, title, mtext, axis
hist(airquality$Ozone) # draws a new plot
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City") # adds a title
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City")) # this puts the title in the call to plot rather than using the title function
with(subset(airquality, Month == 5), points(Wind, Ozone, col="blue"))
swirl()
install.packages("swirl")
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
hist(faithful, col="green", breaks=20) # --swirl()--breaks the data into 20 buckets
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(median(ppm), col="magenta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, col="red")
boxplot(pollution, pm25~region, col="red")
boxplot(pm25~region, pollution, col="red")
par(mfrow=2,1, mar=c(4,4,3,1))
par(mfrow=c(2,1), mar=c(4,4,3,1))
par(mfrow = c(2,1), mar = c(4,4,3,1))
par(mfrow = c(2, 1), mar = c(4, 4, 3, 1))
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution$region = "east")
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east, 5)
head(east)
hist(east$pm25, col="green")
west <- subset(pollution, region == "west")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
ablinte(lwd=12)
ablinte(polution, lwd=12)
ablinte(pollution, lwd=12)
abline(lwd=12)
abline(pollution, lwd=12)
abline(h=2, lwd=2, lty=2)
abline(h = 2, lwd = 2, lty = 2)
abline(h=12, lwd=2, lty=2)
plot(pollution$longitude, ppm, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$longitude~west$pm25, main="West")
plot(west$longitude(x-axis, west$pm25(y-axis)), main="West")
plot(west$longitude(x-axis), west$pm25(y-axis), main="West")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="East")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful, plot(eruptions and waiting))
with(faithful, plot(eruptions, waiting))
par(main="Old Faithful Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
pdf(file="faithful")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$sped), max(cars$dist, "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist, "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xplot(life.Exp~Income|region, data=state, layout=c(4,1))
install.packages("lattice")
library(lattice)
xplot(life.Exp~Income|region, data=state, layout=c(4,1))
xyplot(life.Exp~Income|region, data=state, layout=c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout=c(4,1))
swirl()
swirl
library(swirl)
swirl()
xyplot(Life.Exp~Income|region, data=state, layout=c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(airquality, main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind~Ozone))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
lenght(par())
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
with(airquality, main="Wind and Ozone in NYC")
title(main="Wind and Ozone in NYC")
points(airquality[month=="5"])
may <- gl(5)
?gl
may <- gl(5,5)
may <- subset(airquality, Month==5)
with(airquality, plot(wind, ozone))
with(airquality, plot(Wind, ozone))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone), pch(17, col="blue"))
points(may$Wind, may$Ozone, col="blue", pch=17)
subsetting(airquality, c(-5))
notmay <- with(subset(airquality, Month != 5))
notmay <- with(subset(airquality, Month != 5), points(Wind, Ozone))
notmay <- with(subset(airquality, Month =! 5))
notmay <- subset(airquality, Month =! 5))
notmay <- subset(airquality, Month =! 5)
notmay <- subset(airquality, Month != 5)
plot(notmay, points(Wind, Ozone, col="red"))
?points
points(Wind, Ozone)
notmay(points(Wind, Ozone))
with(notmay, points(Wind, Ozone))
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red") legend=c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(median, lty=2, lwd=2)
abline(median(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext(main="Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer=TRUE)
?read.table
if (!file.exists("data")) {
dir.create("data")
}
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
destination <- "./data/household_power_consumption.zip"
download.file(url, destination, method = "curl")    ##don't forget to use method="curl" when you use a mac
list.files("./data")
dateDownloaded <- date()
dateDownloaded
part1 <- read.table(unz(destination, "./data/household_power_consumption.txt"), stringsAsFactors = FALSE, header = TRUE, sep = ";", na.strings = "?") ## Getting the dataset
unlink(destination)
part1$Date <- as.Date(part1$Date, "%d/%m/%Y")
part1 <- read.table(unz(destination, "./data/household_power_consumption.txt"), stringsAsFactors = FALSE, header = TRUE, sep = ";", na.strings = "?")
part1 <- read.table(unzip(destination, "./data/household_power_consumption.txt"), stringsAsFactors = FALSE, header = TRUE, sep = ";", na.strings = "?")
##  data <- read.table(unz(destination, "file.txt"))  ## you can set your parameters like sep=";" or header=TRUE
##  unlink(destination)
part1 <- read.table(unzip(destination, "./data/household_power_consumption.zip"), stringsAsFactors = FALSE, header = TRUE, sep = ";", na.strings = "?") ## Getting the dataset
